<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.4.4</version>
  </parent>

  <groupId>ru.ibs.training.java.spring</groupId>
  <artifactId>spring-advanced</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>
  <modules>
    <module>spring-advanced-task01</module>
    <module>spring-advanced-web-mockito</module>
    <module>spring-advanced-rest</module>
    <module>spring-advanced-webflux-testing</module>
    <module>examples-data-rest</module>
    <module>spring-advanced-solutions</module>
    <module>spring-advanced-core</module>
    <module>spring-advanced-stomp-websocket</module>
  </modules>

  <properties>
    <java.version>21</java.version>
    <revision>0.0.1-SNAPSHOT</revision>
    <minimal.maven.version>3.9.9</minimal.maven.version>
    <spring-boot.version>3.4.4</spring-boot.version>
    <spring-cloud.version>2024.0.1</spring-cloud.version>

    <lombok.version>1.18.38</lombok.version>
    <jspecify.version>1.0.0</jspecify.version>
    <checker.version>3.49.2</checker.version>
    <annotations.version>26.0.2</annotations.version>
    <jcip-annotations.version>1.0</jcip-annotations.version>
    <spotbugs.version>4.9.3</spotbugs.version>
    <error_prone_annotations.version>2.38.0</error_prone_annotations.version>
    <vavr.version>0.10.6</vavr.version>
    <assertj-vavr.version>0.4.3</assertj-vavr.version>
    <mapstruct.version>1.6.3</mapstruct.version>
    <jaxb-api.version>2.4.0-b180830.0359</jaxb-api.version>
    <javax.servlet-api.version>4.0.1</javax.servlet-api.version>
    <javax.el-api.version>3.0.0</javax.el-api.version>
    <springdoc-openapi.version>2.8.6</springdoc-openapi.version>

    <maven.sourceDirectory>${project.basedir}/src/main/java</maven.sourceDirectory>

    <flatten-maven-plugin.version>1.7.0</flatten-maven-plugin.version>
    <flatten.mode>resolveCiFriendliesOnly</flatten.mode>
    <updatePomFile>true</updatePomFile>

    <versions-maven-plugin.version>2.18.0</versions-maven-plugin.version>
    <yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
    <commons-io.version>2.19.0</commons-io.version>
    <proguard-maven-plugin.version>2.6.1</proguard-maven-plugin.version>
    <proguard-core.version>9.1.7</proguard-core.version>

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!--region docker-->
    <!--        <dependency>-->
    <!--            <groupId>org.springframework.boot</groupId>-->
    <!--            <artifactId>spring-boot-docker-compose</artifactId>-->
    <!--            <optional>true</optional>-->
    <!--        </dependency>-->
    <!--        <dependency>-->
    <!--            <groupId>org.postgresql</groupId>-->
    <!--            <artifactId>postgresql</artifactId>-->
    <!--            <scope>runtime</scope>-->
    <!--            <exclusions>-->
    <!--                <exclusion>-->
    <!--                    <groupId>org.checkerframework</groupId>-->
    <!--                    <artifactId>checker-qual</artifactId>-->
    <!--                </exclusion>-->
    <!--            </exclusions>-->
    <!--        </dependency>-->
    <!--endregion-->

    <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne) -->
    <dependency>
      <groupId>org.jspecify</groupId>
      <artifactId>jspecify</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
    </dependency>
    <!--endregion-->

    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-vavr</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne) -->
      <dependency>
        <groupId>org.jspecify</groupId>
        <artifactId>jspecify</artifactId>
        <version>${jspecify.version}</version>
      </dependency>
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker</artifactId>
        <version>${checker.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>${annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>${jcip-annotations.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${error_prone_annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <!--endregion-->

      <dependency>
        <groupId>io.vavr</groupId>
        <artifactId>vavr</artifactId>
        <version>${vavr.version}</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-vavr</artifactId>
        <version>${assertj-vavr.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>${jaxb-api.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${javax.servlet-api.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.el</groupId>
        <artifactId>javax.el-api</artifactId>
        <version>${javax.el-api.version}</version>
      </dependency>
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>${commons-io.version}</version>
      </dependency>

      <!--region SpringDoc OpenAPI-->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-hateoas</artifactId>
        <version>1.8.0</version>
      </dependency>
      <!--endregion-->

      <!--region Modules-->
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-task01</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-web-mockito</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-rest-impl</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-rest-api</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-rest-client</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-rest-stub</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-webflux-testing</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-actuator</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-caching</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-data-rest</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-data-rest-events</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-data-rest-hateoas</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-data-rest-webclient</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-mockito</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-swagger</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-task01</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-solutions-webflux</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-core</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>ru.ibs.training.java.spring</groupId>
        <artifactId>spring-advanced-stomp-websocket</artifactId>
        <version>${revision}</version>
      </dependency>
      <!--endregion-->

    </dependencies>
  </dependencyManagement>

  <build>
    <defaultGoal>clean verify</defaultGoal>
    <!--suppress MybatisXMapperXmlInspection -->
    <sourceDirectory>${maven.sourceDirectory}</sourceDirectory>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerArgs>
              <arg>-Xlint:all,-serial,-processing</arg> <!--Включает все рекомендуемые предупреждения.-->

              <arg>-J--add-exports=java.base/sun.security.ssl=ALL-UNNAMED</arg>
              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>

              <arg>-J--add-opens=java.base/java.lang=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.jvm=ALL-UNNAMED</arg>
            </compilerArgs>
            <annotationProcessorPaths>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </path>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
              <path>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
              </path>
            </annotationProcessorPaths>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireJavaVersion>
                    <version>${java.version}</version>
                  </requireJavaVersion>
                  <requireMavenVersion>
                    <version>${minimal.maven.version}</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
<!--          <configuration>-->
<!--            <updatePomFile>true</updatePomFile>-->
<!--            <flattenMode>resolveCiFriendliesOnly</flattenMode>-->
<!--          </configuration>-->
          <executions>
            <execution>
              <id>flatten:process-resources:flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
            </execution>
            <execution>
              <id>flatten.clean:clean:clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>it.ozimov</groupId>
          <artifactId>yaml-properties-maven-plugin</artifactId>
          <version>${yaml-properties-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>initialize</id>
              <phase>initialize</phase>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
              <configuration>
                <files>
                  <file>${maven.multiModuleProjectDirectory}/maven.yml</file>
<!--                  <file>${project.basedir}/maven.yml</file>-->
                </files>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
          <configuration>
            <rulesUri>file://${maven.multiModuleProjectDirectory}/ruleset.xml</rulesUri>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>it.ozimov</groupId>
        <artifactId>yaml-properties-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>build</id>
      <properties>
        <lombok.sourceDirectory>${project.basedir}/src/main/java</lombok.sourceDirectory>
        <lombok.testSourceDirectory>${project.basedir}/src/test/java</lombok.testSourceDirectory>
        <lombok.outputDirectory>${project.build.directory}/generated-sources/delomboked</lombok.outputDirectory>
        <lombok.testOutputDirectory>${project.build.directory}/generated-test-sources/delomboked</lombok.testOutputDirectory>
        <maven.sourceDirectory>${lombok.outputDirectory}</maven.sourceDirectory>
      </properties>
      <build>
        <defaultGoal>clean install</defaultGoal>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>${maven-antrun-plugin.version}</version>
              <executions>
                <execution>
                  <id>delombok-sources:process-sources:run</id>
                  <phase>process-sources</phase>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <configuration>
                    <target name="delombok-sources">
                      <property name="maven.classpath" refid="maven.compile.classpath"/>
                      <mkdir dir="${lombok.outputDirectory}"/>
                      <java classname="lombok.launch.Main" fork="true">
                        <classpath>
                          <!--suppress MavenModelInspection, MybatisXMapperXmlInspection -->
                          <pathelement path="${maven.classpath}"/>
                        </classpath>

                        <arg value="delombok"/>
                        <arg value="${lombok.sourceDirectory}"/>
                        <!-- @formatter:off -->
                        <arg value="-f"/><arg value="indent:2"/>
                        <arg value="-f"/><arg value="finalParams:skip"/>
                        <arg value="-f"/><arg value="pretty"/>
                        <arg value="-d"/><arg value="${lombok.outputDirectory}"/>
                        <!-- @formatter:on -->
                      </java>
                      <touch file="${lombok.outputDirectory}/lombok.config"/>
                      <echo file="${lombok.outputDirectory}/lombok.config" append="true">
                        config.stopBubbling = true
                      </echo>
                    </target>
                  </configuration>
                </execution>
                <execution>
                  <id>delombok-test-sources:process-test-sources:run</id>
                  <phase>process-test-sources</phase>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <configuration>
                    <target name="delombok-test-sources">
                      <property name="maven.classpath" refid="maven.test.classpath"/>
                      <mkdir dir="${lombok.testOutputDirectory}"/>
                      <java classname="lombok.launch.Main" fork="true">
                        <classpath>
                          <!--suppress MavenModelInspection, MybatisXMapperXmlInspection -->
                          <pathelement path="${maven.classpath}"/>
                          <pathelement path="${lombok.outputDirectory}"/>
                        </classpath>
                        <arg value="delombok"/>
                        <arg value="${lombok.testSourceDirectory}"/>

                        <!-- @formatter:off -->
                      <arg value="-f"/><arg value="indent:2"/>
                      <arg value="-f"/><arg value="finalParams:skip"/>
                      <arg value="-f"/><arg value="pretty"/>
                      <arg value="-d"/><arg value="${lombok.testOutputDirectory}"/>
                      <!-- @formatter:on -->
                      </java>
                      <touch file="${lombok.testOutputDirectory}/lombok.config"/>
                      <echo file="${lombok.testOutputDirectory}/lombok.config" append="true">
                        config.stopBubbling = true
                      </echo>
                    </target>
                  </configuration>
                </execution>
                <execution>
                  <id>delombok-cleaning:verify:run</id>
                  <phase>verify</phase>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <configuration>
                    <target name="cleanup-delomboked-dir">
                      <delete dir="${lombok.outputDirectory}"/>
                      <delete dir="${lombok.testOutputDirectory}"/>
                    </target>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <artifactId>maven-source-plugin</artifactId>
              <version>${maven-source-plugin.version}</version>
              <executions>
                <execution>
                  <id>attach-sources:package:jar</id>
                  <goals>
                    <goal>jar</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>${maven-javadoc-plugin.version}</version>
              <configuration>
                <release>${java.version}</release>
                <additionalOptions>-Xdoclint:all -Xdoclint:-missing</additionalOptions>
              </configuration>
              <executions>
                <execution>
                  <id>attach-javadocs:package:jar</id>
                  <!--<phase>package</phase> &lt;!&ndash; default &ndash;&gt;-->
                  <goals>
                    <!--suppress MybatisXMapperXmlInspection -->
                    <goal>jar</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.github.wvengen</groupId>
              <artifactId>proguard-maven-plugin</artifactId>
              <version>${proguard-maven-plugin.version}</version>
              <executions>
                <execution>
                  <id>obfuscation-packaging:package:proguard</id>
                  <phase>package</phase>
                  <goals>
                    <goal>proguard</goal>
                  </goals>
                  <configuration>
                    <!--<proguardVersion>7.6.1</proguardVersion> &lt;!&ndash; latest, default: 7.4.1&ndash;&gt;-->
                    <attach>true</attach>
                    <appendClassifier>false</appendClassifier>
                    <addMavenDescriptor>true</addMavenDescriptor>
                    <injar>${project.build.finalName}.jar</injar>
                    <injarNotExistsSkip>true</injarNotExistsSkip>
                    <libs>
                      <lib>${java.home}/jmods/java.base.jmod</lib>
                    </libs>

                    <options>
                      <!-- @formatter:off -->
                    <option>-keep
                      class ru.cloudmaster.gpn.* {
                      public static void main(java.lang.String[]);
                      }
                    </option>
                    <!-- @formatter:on -->
                      <option>-keep,allowoptimization class org.yaml.snakeyaml.** { *; }</option>
                      <!--<option>-keepdirectories</option> &lt;!&ndash; Для отладки — бывает полезно временно включить, что бы увидеть правильную иерархию пакетов, по которой легче догадаться, где обфускация что-то ломает &ndash;&gt;-->
                      <option>-dontwarn</option> <!-- suppress warnings about banks in logs about the absence of classes mentioned in the project -->
                      <option>-dontnote</option> <!-- see: https://www.guardsquare.com/manual/troubleshooting/troubleshooting#duplicateclass -->
                    </options>
                  </configuration>
                </execution>
              </executions>
              <dependencies>
                <dependency>
                  <groupId>com.guardsquare</groupId>
                  <artifactId>proguard-core</artifactId>
                  <version>${proguard-core.version}</version>
                  <scope>runtime</scope>
                  <optional>true</optional>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
          </plugin>
          <plugin>
            <artifactId>maven-javadoc-plugin</artifactId>
          </plugin>
<!--          <plugin>-->
<!--            <groupId>com.github.wvengen</groupId>-->
<!--            <artifactId>proguard-maven-plugin</artifactId>-->
<!--          </plugin>-->
        </plugins>
      </build>
    </profile>
  </profiles>

  <modelVersion>4.0.0</modelVersion>
</project>
